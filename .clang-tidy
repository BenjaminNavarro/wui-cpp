---
Checks: >
    clang-analyzer-*,
    bugprone-*,
        -bugprone-macro-parentheses,
    performance-*,
    readability-*,
        -readability-magic-numbers,
        -readability-else-after-return,
    modernize-*,
        -modernize-use-trailing-return-type,
    misc-misplaced-const,
    misc-redundant-expression,
    misc-static-assert,
    misc-throw-by-value-catch-by-reference,
    readability-identifier-naming
WarningsAsErrors: ""
HeaderFilterRegex: "include/"
FormatStyle: file
CheckOptions:
    - { key: readability-identifier-naming.NamespaceCase, value: lower_case }
    - { key: readability-identifier-naming.ClassCase, value: CamelCase }
    - { key: readability-identifier-naming.ClassMemberCase, value: lower_case }
    - { key: readability-identifier-naming.PublicMemberCase, value: lower_case }
    - { key: readability-identifier-naming.ProtectedMemberCase, value: lower_case }
    - { key: readability-identifier-naming.ProtectedMemberSuffix, value: _ }
    - { key: readability-identifier-naming.PrivateMemberCase, value: lower_case }
    - { key: readability-identifier-naming.PrivateMemberSuffix, value: _ }
    - { key: readability-identifier-naming.TemplateParameterCase, value: CamelCase }
    - { key: readability-identifier-naming.FunctionCase, value: camelBack }
    - { key: readability-identifier-naming.ParameterCase, value: lower_case }
    - { key: readability-identifier-naming.VariableCase, value: lower_case }
    - { key: readability-identifier-naming.GlobalConstantCase, value: lower_case }
    - { key: readability-identifier-naming.EnumCase, value: CamelCase }
    - { key: readability-identifier-naming.EnumConstantCase, value: UPPER_CASE }
    - { key: readability-identifier-naming.ScopedEnumConstantCase, value: CamelCase }
    - { key: readability-identifier-naming.UnionCase, value: CamelCase }
    - { key: readability-identifier-naming.MacroDefinitionCase, value: UPPER_CASE }
    - { key: readability-identifier-naming.MacroDefinitionPrefix, value: PHYSICAL_QUANTITIES_ }
